{
    "id": "hdXtSWdjMVG5Uu8glbQp",
    "name": "ewaf ewf ",
    "task": {
        "tests": [],
        "hints": []
    },
    "content": [
        {
            "type": "snippet",
            "lines": [
                " ",
                " import pprint",
                " import re  # noqa: F401",
                "*",
                "*import six",
                "*",
                "*class AttachDrive(object):",
                "*    \"\"\"NOTE: This class is auto generated by the swagger code generator program.",
                "*",
                "*    Do not edit the class manually.",
                "*    \"\"\"",
                "*    \"\"\"",
                "*    Attributes:",
                "*      swagger_types (dict): The key is attribute name",
                "*                            and the value is attribute type.",
                "*      attribute_map (dict): The key is attribute name",
                "*                            and the value is json key in definition.",
                "*    \"\"\"",
                "*    swagger_types = {",
                "*        'status': 'str'",
                "*    }",
                "*",
                "*    attribute_map = {",
                "*        'status': 'status'",
                "*    }",
                "*",
                "*    def __init__(self, status=None):  # noqa: E501",
                "*        \"\"\"AttachDrive - a model defined in Swagger\"\"\"  # noqa: E501",
                "*        self._status = None",
                "*        self.discriminator = None",
                "         if status is not None:",
                "             self.status = status",
                " "
            ],
            "firstLineNumber": 12,
            "path": "python-sdk/qarax/models/attach_drive.py",
            "comments": [],
            "text": "waf wef wef"
        },
        {
            "type": "snippet",
            "lines": [
                " ",
                "         :param status: The status of this AttachDrive.  # noqa: E501",
                "         :type: str",
                "*        \"\"\"",
                "*",
                "*        self._status = status",
                "*",
                "*    def to_dict(self):",
                "*        \"\"\"Returns the model properties as a dict\"\"\"",
                "*        result = {}",
                "*",
                "*        for attr, _ in six.iteritems(self.swagger_types):",
                "*            value = getattr(self, attr)",
                "*            if isinstance(value, list):",
                "*                result[attr] = list(map(",
                "*                    lambda x: x.to_dict() if hasattr(x, \"to_dict\") else x,",
                "*                    value",
                "*                ))",
                "*            elif hasattr(value, \"to_dict\"):",
                "*                result[attr] = value.to_dict()",
                "*            elif isinstance(value, dict):",
                "*                result[attr] = dict(map(",
                "*                    lambda item: (item[0], item[1].to_dict())",
                "*                    if hasattr(item[1], \"to_dict\") else item,",
                "*                    value.items()",
                "*                ))",
                "*            else:",
                "*                result[attr] = value",
                "*        if issubclass(AttachDrive, dict):",
                "*            for key, value in self.items():",
                "*                result[key] = value",
                "*",
                "*        return result",
                "*",
                "     def to_str(self):",
                "         \"\"\"Returns the string representation of the model\"\"\"",
                "         return pprint.pformat(self.to_dict())"
            ],
            "firstLineNumber": 59,
            "path": "python-sdk/qarax/models/attach_drive.py",
            "comments": []
        },
        {
            "type": "snippet",
            "lines": [
                " ",
                " try:",
                "     import urllib3",
                "*except ImportError:",
                "*    raise ImportError('Swagger python client requires urllib3.')",
                "*",
                "*",
                "*logger = logging.getLogger(__name__)",
                "*",
                "*",
                "*class RESTResponse(io.IOBase):",
                "*",
                "*    def __init__(self, resp):",
                "*        self.urllib3_response = resp",
                "*        self.status = resp.status",
                "*        self.reason = resp.reason",
                "*        self.data = resp.data",
                "*",
                "*    def getheaders(self):",
                "*        \"\"\"Returns a dictionary of the response headers.\"\"\"",
                "*        return self.urllib3_response.getheaders()",
                "*",
                "     def getheader(self, name, default=None):",
                "         \"\"\"Returns a given response header.\"\"\"",
                "         return self.urllib3_response.getheader(name, default)"
            ],
            "firstLineNumber": 25,
            "path": "python-sdk/qarax/rest.py",
            "comments": []
        },
        {
            "type": "snippet",
            "lines": [
                " ",
                "         # https pool manager",
                "         if configuration.proxy:",
                "*            self.pool_manager = urllib3.ProxyManager(",
                "+        er(",
                "*                num_pools=pools_size,",
                "*                minsize=minsize,",
                "*                cert_reqs=cert_reqs,",
                "*                ca_certs=ca_certs,",
                "*                cert_file=configuration.cert_file,",
                "*                key_file=configuration.key_file,",
                "*                proxy_url=configuration.proxy,",
                "*                **addition_pool_args",
                "*            )",
                "*        else:",
                "*            self.pool_manager = urllib3.PoolManager(",
                "                 num_pools=pools_size,",
                "                 maxsize=maxsize,",
                "                 cert_reqs=cert_reqs,"
            ],
            "firstLineNumber": 83,
            "path": "python-sdk/qarax/rest.py",
            "comments": [],
            "text": "wfefsf w few f"
        }
    ],
    "symbols": {},
    "file_version": "2.0.1",
    "meta": {
        "app_version": "0.4.5-0",
        "file_blobs": {
            "python-sdk/qarax/models/attach_drive.py": "d0e601f8130fd8d95ea79afac65d29da972719d1",
            "python-sdk/qarax/rest.py": "3bc71663da4302f813abea4b1c7586ec039a9f18"
        }
    }
}
