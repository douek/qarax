{
    "id": "8ktksvRTP41sFhjxB3bi",
    "name": "intro & summary",
    "task": {
        "dod": "dod",
        "tests": [],
        "hints": []
    },
    "content": [
        {
            "type": "text",
            "text": "intro"
        },
        {
            "type": "snippet",
            "lines": [
                " ",
                " try:",
                "     import urllib3",
                "*except ImportError:",
                "*    raise ImportError('Swagger python client requires urllib3.')",
                "*",
                "*",
                "*logger = logging.getLogger(__name__)",
                "*",
                "*",
                "*class RESTResponse(io.IOBase):",
                "*",
                "*    def __init__(self, resp):",
                "*        self.urllib3_response = resp",
                "*        self.status = resp.status",
                "*        self.reason = resp.reason",
                "*        self.data = resp.data",
                "*",
                "*    def getheaders(self):",
                "*        \"\"\"Returns a dictionary of the response headers.\"\"\"",
                "*        return self.urllib3_response.getheaders()",
                "*",
                "*    def getheader(self, name, default=None):",
                "*        \"\"\"Returns a given response header.\"\"\"",
                "*        return self.urllib3_response.getheader(name, default)",
                "*",
                " ",
                " class RESTClientObject(object):",
                " "
            ],
            "firstLineNumber": 25,
            "path": "python-sdk/qarax/rest.py",
            "comments": []
        },
        {
            "type": "snippet",
            "lines": [
                "         if configuration.assert_hostname is not None:",
                "             addition_pool_args['assert_hostname'] = configuration.assert_hostname  # noqa: E501",
                " ",
                "*        if maxsize is None:",
                "+",
                "*            if configuration.connection_pool_maxsize is not None:",
                "*                maxsize = configuration.connection_pool_maxsize",
                "*            else:",
                "*                maxsize = 4",
                "*",
                "*        # https pool manager",
                "*        if configuration.proxy:",
                "*            self.pool_manager = urllib3.ProxyManager(",
                "*                num_pools=pools_size,",
                "*                maxsize=maxsize,",
                "*                cert_reqs=cert_reqs,",
                "*                ca_certs=ca_certs,",
                "*                cert_file=configuration.cert_file,",
                "*                key_file=configuration.key_file,",
                "*                proxy_url=configuration.proxy,",
                "*                **addition_pool_args",
                "*            )",
                "*        else:",
                "*            self.pool_manager = urllib3.PoolManager(",
                "*                num_pools=pools_size,",
                "*                maxsize=maxsize,",
                "*                cert_reqs=cert_reqs,",
                "*                ca_certs=ca_certs,",
                "*                cert_file=configuration.cert_file,",
                "*                key_file=configuration.key_file,",
                "*                **addition_pool_args",
                "*            )",
                " ",
                "     def request(self, method, url, query_params=None, headers=None,",
                "                 body=None, post_params=None, _preload_content=True,"
            ],
            "firstLineNumber": 75,
            "path": "python-sdk/qarax/rest.py",
            "comments": []
        },
        {
            "type": "snippet",
            "lines": [
                "                 \"body parameter cannot be used with post_params parameter.\"",
                "             )",
                " ",
                "*        post_params = post_params or {}",
                "*        headers = headers or {}",
                "*",
                "*        timeout = None",
                "*        if _request_timeout:",
                "*            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821",
                "*                timeout = urllib3.Timeout(total=_request_timeout)",
                "*            elif (isinstance(_request_timeout, tuple) and",
                "*                  len(_request_timeout) == 2):",
                "*                timeout = urllib3.Timeout(",
                "*                    connect=_request_timeout[0], read=_request_timeout[1])",
                "*",
                "*        if 'Content-Type' not in headers:",
                "*            headers['Content-Type'] = 'application/json'",
                "*",
                "         try:",
                "             # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`",
                "             if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:"
            ],
            "firstLineNumber": 134,
            "path": "python-sdk/qarax/rest.py",
            "comments": []
        },
        {
            "type": "text",
            "text": "summary"
        }
    ],
    "symbols": {},
    "file_version": "2.0.1",
    "meta": {
        "app_version": "0.4.5-0",
        "file_blobs": {
            "python-sdk/qarax/rest.py": "02f2ecfca10ecc3f4bb39878d0fb2f22421ba0ff"
        }
    }
}
